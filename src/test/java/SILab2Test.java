/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package si_2024_lab2_225014;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.*;

public class SILab2Test {

    @Test
    public void testEveryBranch() {
        RuntimeException exc;
        List<Item> allItems = new ArrayList<Item>();
        int payment;

        // Test 1
        exc = assertThrows(RuntimeException.class, () -> SILab2.checkCart(null, 0));
        assertTrue(exc.getMessage().contains("allItems list can't be null!"));

        // Test 2
        payment = 0;
        assertTrue(SILab2.checkCart(allItems, payment));

        // Test 3
        payment = -1;
        assertFalse(SILab2.checkCart(allItems, payment));

        // Test 4
        exc = assertThrows(RuntimeException.class, () -> SILab2.checkCart(Arrays.asList( new Item(" ", null, 40, 0.5f)), 1));
        assertTrue(exc.getMessage().contains("No barcode!"));

        // Test 5
        allItems = Arrays.asList( new Item(" ", "012345", 300, 0.5f) );
        payment = 150;
        assertTrue(SILab2.checkCart(allItems, payment));

        // Test 6
        allItems = Arrays.asList( new Item(" ", "012345", 300, 0.5f) );
        payment = 100;
        assertFalse(SILab2.checkCart(allItems, payment));

        // Test 7
        exc = assertThrows(RuntimeException.class, () -> SILab2.checkCart( Arrays.asList( new Item("Name", "ABC123", 127, 0.5f) ), 1));
        assertTrue(exc.getMessage().contains("Invalid character in item barcode!"));

        // Test 8
        allItems = Arrays.asList( new Item("Name", "098765", 30, -1) );
        payment = 30;
        assertTrue(SILab2.checkCart(allItems, payment));

        // Test 8
        allItems = Arrays.asList( new Item("Name", "098765", 30, -1) );
        payment = 10;
        assertFalse(SILab2.checkCart(allItems, payment));
    }


    @Test
    public void testMultipleCondition() {
        List<Item> allItems;
        int payment;

        // Test 1
        allItems = Arrays.asList( new Item("Name", "0", 500, 1) );
        payment = 460;
        assertFalse(SILab2.checkCart(allItems, payment));

        // Test 2
        allItems = Arrays.asList( new Item("Name", "0", 600, 1) );
        payment = 500;
        assertFalse(SILab2.checkCart(allItems, payment));

        // Test 3
        allItems = Arrays.asList( new Item("Name", "0", 500, 0) );
        payment = 500;
        assertTrue(SILab2.checkCart(allItems, payment));

        // Test 4
        allItems = Arrays.asList( new Item("Name", "1", 500, 1) );
        payment = 500;
        assertTrue(SILab2.checkCart(allItems, payment));
    }
}